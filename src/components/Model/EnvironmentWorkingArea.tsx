/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 .\environment-working.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTFResult, ModelProps } from 'types/interface'
import * as THREE from 'three';
import { useFrame } from '@react-three/fiber';

export function WorkingArea(props:ModelProps) {

  const { section, copySection } = props;
  const group = useRef<THREE.Group>(null);

  const { nodes, materials } = useGLTF('/models-3d/environment-working.glb') as GLTFResult;

  const hideEffect = useRef<boolean>(false);

  useEffect(() => {
    if (!group) return;

    if (section==0 && copySection==1) {
      hideEffect.current = true;
    }
  }, [copySection]);

  useFrame(() => {
    if (group.current && hideEffect.current) {
      group.current.scale.set(group.current.scale.x-10, group.current.scale.y-10, group.current.scale.z-10);
      if (group.current.scale.x<=0) {
        hideEffect.current = false;
      }
    }
  })

  return (
    <group ref={group} {...props} dispose={null} scale={100}>
      <group position={[-0.02, 0.696, 0.73]} rotation={[3.127, 0.018, -3.141]} scale={0.069}>
        <group position={[0.046, 2.405, 2.448]} rotation={[Math.PI / 2, 0, 0]} scale={0.797}>
          <mesh geometry={nodes.Cube003.geometry} material={materials['aluminium.001']} />
          <mesh geometry={nodes.Cube003_1.geometry} material={materials['matte.002']} />
          <mesh geometry={nodes.Cube003_2.geometry} material={materials['screen.002']} />
          <mesh geometry={nodes.Cube003_3.geometry} material={materials['keys.001']} />
          <mesh geometry={nodes.Cube003_4.geometry} material={materials['trackpad.001']} />
          <mesh geometry={nodes.Cube003_5.geometry} material={materials['touchbar.001']} />
        </group>
      </group>
      <mesh geometry={nodes['15747_Cylinder_Bench_new'].geometry} material={materials['_15747_Cylinder_Bench_v1default.001']} position={[-1.733, -0.038, 0.308]} rotation={[0.103, 0, 0]} scale={[0.127, 0.138, 0.108]} />
    </group>
  )
}
